name: CI/CD Production Env

on:
  push:
    branches: ["production", "feat/automation/add-workflows-docker"]
  # pull_request:
  #   branches: ["main"]

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-build:
    name: Test & Build for Production env
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ["backend-prod"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: '1.22.5'

      - name: Copying build & test environment
        run: |
          cp /etc/shin-api/config.yml .
          cp /etc/shin-api/test.config.yml .

      - name: Downloading dependencies
        run: |
          go mod download 

      - name: Running tests
        run: |
          go test -v ./tests

      - name: Run DB migrations
        run: |
          go run cmd/migrate/main.go up

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [test-build]
    name: Deploy to Production
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ["backend-prod"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker run
        run: |
          docker pull ${{ steps.meta.outputs.tags }}
          docker ps -qa --filter "name=shin-api" | grep -q . && docker stop shin-api && docker rm -fv shin-api
          docker run -d --restart always -p 5062:5062 -h shin-api --network shinapi_default --name shin-api ${{ steps.meta.outputs.tags }}