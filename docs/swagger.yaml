openapi: 3.0.0
info:
  title: Shin Project Docs
  version: 1.0.0
  description: Shin Project Docs
servers:
  - url: https://dev.shinid.com/
    description: Development server (uses test data)
  - url: https://api.shinid.com/
    description: Production server (uses live data)
  - url: http://localhost:3000/
    description: Local server (for development purposes)
paths:
  # Authentication endpoints (existing)
  /auth/login:
    post:
      summary: Login the user
      description: Login the user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: 'string'
                  example: 'example@shin.com'
                password:
                  type: 'string'
                  example: 'P@$wd123'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
  
  # ... (other existing authentication endpoints)

  # Integration endpoints (existing)
  /integrations/keys:
    get:
      summary: Get All Keys
      description: Fetch all of the integration keys for current user
      tags:
        - Integration
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  limit:
                    type: number
                  page:
                    type: number
                  total:
                    type: number
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationKey'
  
  # ... (other existing integration endpoints)

  # Verification endpoints (new)
  /verifications:
    get:
      tags:
        - Verifications
      summary: List all verifications
      parameters:
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of verifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Verification'
                  total:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      tags:
        - Verifications
      summary: Create a new verification
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationForm'
      responses:
        '201':
          description: Verification created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /verifications/{id}:
    get:
      tags:
        - Verifications
      summary: Get a verification by ID
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Verification details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    put:
      tags:
        - Verifications
      summary: Update a verification
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationForm'
      responses:
        '202':
          description: Verification updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    delete:
      tags:
        - Verifications
      summary: Delete a verification
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Verification deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /verifications/{id}/individuals:
    get:
      tags:
        - Verification Individuals
      summary: List individuals for a verification
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idPath'
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
      responses:
        '200':
          description: List of verification individuals
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VerificationIndividual'
                  total:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /verifications/individuals:
    post:
      tags:
        - Verification Individuals
      summary: Create a new verification individual
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationIndividualForm'
      responses:
        '201':
          description: Verification individual created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIndividual'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /verifications/individuals/{id}:
    get:
      tags:
        - Verification Individuals
      summary: Get a verification individual by ID
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Verification individual details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIndividual'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /verifications/{id}/individuals/{customer}:
    get:
      tags:
        - Verification Individuals
      summary: Get a verification individual by customer
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idPath'
        - in: path
          name: customer
          required: true
          schema:
            type: string
          description: Customer identifier
      responses:
        '200':
          description: Verification individual details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIndividual'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'


  /verifications/{id}/connect:
    get:
      tags:
        - Verification Individuals
      summary: Connect for verification
      parameters:
        - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Verification connection details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIndividual'
        '400':
          $ref: '#/components/responses/BadRequest'

  /verifications/{id}/callback:
    get:
      tags:
        - Verification Individuals
      summary: Callback for verification
      parameters:
        - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Callback processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        '400':
          $ref: '#/components/responses/BadRequest'

  /verifications/{id}/verify:
    get:
      tags:
        - Verification Individuals
      summary: Verify a verification individual
      parameters:
        - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Verification result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIndividual'
        '400':
          $ref: '#/components/responses/BadRequest'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  # Existing schemas
  schemas:
    Tokens:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string

    IntegrationKey:
      type: object
      properties:
        id:
          type: string
          example: 339ac66a-e18d-4622-904b-4929541995ff
        name:
          type: string
          example: Key Name
        key:
          type: string
          example: wy43fFdRW-u-tlhhSQCK0Yd24Qy7bYFEIS-tI9AjM54=
        secret:
          type: string
          example: pE8GsvI2MTTeBFVlPSg1fzqSLm4Alv_GQ8FBpEHZb-_XQoeoWbLVGVGsbiF8As-AKzTKZSphwHjviZeUDa-l-Q==
        base_url:
          type: string
          example: http://localhost:3000
        status:
          type: string
          enum: 
              - ACTIVE
              - SUSPENDED
          example: ACTIVE
        created_at:
          type: string
          example: 2024-10-13T21:06:58.923694Z

    # New verification schemas
    Verification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
        schema_id:
          type: string
          format: uuid
        schema:
          $ref: '#/components/schemas/Schema'
        user_id:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/VerificationAttribute'
        type:
          $ref: '#/components/schemas/VerificationType'
        single:
          $ref: '#/components/schemas/VerificationIndividual'
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    VerificationIndividual:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        recipient_id:
          type: string
          format: uuid
        recipient:
          $ref: '#/components/schemas/Recipient'
        verification_id:
          type: string
          format: uuid
        verification:
          $ref: '#/components/schemas/Verification'
        present_id:
          type: string
          nullable: true
        connection_id:
          type: string
          nullable: true
        connection_url:
          type: string
          nullable: true
        body:
          type: object
        status:
          $ref: '#/components/schemas/VerificationStatusType'
        validation_error:
          type: string
          nullable: true
        connection_at:
          type: string
          format: date-time
          nullable: true
        verified_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    VerificationAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        attribute_id:
          type: string
          format: uuid
        schema_id:
          type: string
          format: uuid
        verification_id:
          type: string
          format: uuid
        value:
          type: string
        operator:
          $ref: '#/components/schemas/VerificationOperatorType'
        created_at:
          type: string
          format: date-time

    VerificationForm:
      type: object
      required:
        - name
        - schema_id
        - type
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 32
        description:
          type: string
          minLength: 3
          nullable: true
        schema_id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/VerificationType'
        attributes:
          type: array
          items:
            type: object
            properties:
              attribute_id:
                type: string
                format: uuid
              operator:
                $ref: '#/components/schemas/VerificationOperatorType'
              value:
                type: string

    VerificationIndividualForm:
      type: object
      required:
        - customer_id
        - verification_id
      properties:
        customer_id:
          type: string
        verification_id:
          type: string
          format: uuid

    VerificationType:
      type: string
      enum:
        - single
        - bulk

    VerificationStatusType:
      type: string
      enum:
        - requested
        - connected
        - verified
        - failed

    VerificationOperatorType:
      type: string
      enum:
        - equal
        - bigger
        - smaller
        - not

    # Reference schemas (would need to be defined based on your models)
    Schema:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        # ... other schema properties

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        # ... other user properties

    Recipient:
      type: object
      properties:
        id:
          type: string
          format: uuid
        # ... other recipient properties

  parameters:
    idPath:
      name: id
      in: path
      description: ID of the resource
      required: true
      schema:
        type: string
        format: uuid

    paginationPage:
      name: page
      in: query
      description: Page number
      schema:
        type: integer
        default: 1

    paginationLimit:
      name: limit
      in: query
      description: Number of items per page
      schema:
        type: integer
        default: 20

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string